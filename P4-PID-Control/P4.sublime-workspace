{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"n_",
				"n_x_"
			],
			[
				"S",
				"Si"
			],
			[
				"M",
				"MatrixXd"
			],
			[
				"H",
				"Ht"
			],
			[
				"u",
				"urlopen"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/PID.cpp",
			"settings":
			{
				"buffer_size": 1075,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 4540,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 3933,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/*\n    Markdown Preview default settings\n*/\n{\n    /*\n        Sets the default opener for HTML files\n\n        default - Use the system default HTML viewer\n        other - Set a full path to any executable. ex: /Applications/Google Chrome Canary.app or /Applications/Firefox.app\n    */\n    \"browser\": \"default\",\n\n    /*\n        Sets the parser used for building markdown to HTML.\n\n        NOTE: The parser setting is not for the preview commands now.\n        The previews have separate commands for each parser markdown.\n\n        Warning for github API: if you have a ST2 linux build, Python is not built with SSL so it may not work\n\n        default - The current default parser is python-markdown parser.\n        markdown - Use the built-in python-markdown parser\n        github - Use the github API to convert markdown, so you can use GitHub flavored Markdown, see https://help.github.com/articles/github-flavored-markdown/\n    */\n    \"parser\": \"default\",\n\n    /*\n        By default, Markdown Preview builds the HTML in the source directory.\n        It expects the file to exist on disk.  It pops up the build output panel etc.\n\n        If you wish to override this behavior, you can change \"build_action\"\n\n        build - The default build behavior.\n        browser - Preview the file in your browser.\n        clipboard - Copy the HTML output to the clipboard.\n        sublime - Export the HTML to a Sublime tab.\n        save - Run the normal save command that outputs to the source directory.\n            It will also prompt for \"save as\" if the file does not exit on disk.\n\n        All the build options use the default parser defined above in \"parser\"\n    */\n    \"build_action\": \"build\",\n\n    /*\n        Enable or not mathjax support.\n    */\n    \"enable_mathjax\": false,\n\n    /*\n        Enable uml support scripts: flowchart.js and sequence-diagram.js.\n    */\n    \"enable_uml\": false,\n\n    /*\n        Enable highlighting. This enables codehilite extension if not already enabled.\n    */\n    \"enable_highlight\": false,\n\n    /*\n        Pygments support for syntax highlighting.  Controls whether codehilite extension\n        will use Pygments.  If disabled, code blocks will be formatted for javascript\n        highighters such as highlight.js.\n\n        If you manually set codehilite as an included extension in \"enabled_extensions\",\n        your settings will override this one.  To configure using pygments manually:\n            \"enabled_extensions\": [\n                \"codehilite(use_pygments=False)\" // <-Turn off pygments usage\n            ]\n    */\n    \"enable_pygments\": true,\n\n    /*\n        Sets whether highlight JS will auto-guess raw block's syntax.\n        Alternative is to to only highlight blocks where a language has\n        been defined.\n\n        Default is True (guess).\n\n        If you manually set codehilite as an included extension in \"enabled_extensions\",\n        your settings will override this one.  To configure language guessing manually:\n            \"enabled_extensions\": [\n                \"codehilite(guess_lang=False)\" // <-Turn off language guessing\n            ]\n    */\n    \"guess_language\": true,\n\n    /*\n        List of enabled extensions of the selected markdown parser.\n\n        You can get the full list of extensions at:\n            * The python markdown parser, the `markdown`: http://pythonhosted.org/Markdown/extensions/index.html\n\n\n        default - use the default set of extensions, see table later.\n        [ \"default\", \"def_list\", ... ] - a list of extensions. Use \"default\" to include the default extensions.\n\n            Parser     | \"default\" Values\n        ------------|---------------------------\n            default    | [\"extra\", \"github\", \"toc\", \"meta\", \"sane_lists\", \"smarty\", \"wikilinks\"]\n            markdown   | [\"extra\", \"github\", \"toc\", \"meta\", \"sane_lists\", \"smarty\", \"wikilinks\"]\n            github     | extension's values are not used.\n\n    */\n    \"enabled_extensions\": \"default\",\n\n    /*\n        Enabled parsers for the parser \"select parser\" command\n        Available parsers: markdown, github\n\n        When there are more than one parser in the list, Sublime will prompt\n        via the quick panel for which one to use.  If there is only one, it\n        will automatically run that parser.\n    */\n    \"enabled_parsers\": [\"markdown\", \"github\"],\n\n    /*\n        Custom external markdown parsers.\n\n        \"markdown_binary_map\" contains key values pairs.  The key\n        is name of the parser and what is used in \"enabled_parsers\"\n        to turn on the access to the parser.  The value is an array\n        containing the path to the binary and all the parameters that\n        are desired.\n\n        Multimarkdown is provided as an example below.  It's path may differ\n        on your system.\n    */\n\n    \"markdown_binary_map\": {\n        \"multimarkdown\": [\"/usr/local/bin/multimarkdown\"]\n    },\n\n    /*\n        Default mode for the github Markdown parser : markdown (documents) or gfm (comments)\n        see http://developer.github.com/v3/markdown/#render-an-arbitrary-markdown-document\n    */\n    \"github_mode\": \"markdown\",\n\n    /*\n        Enables a post process to inject header ids to ensure hrefs to headers work\n    */\n    \"github_inject_header_ids\": false,\n\n    /*\n        Uses an OAuth token when parsing markdown with GitHub API. To create one for Markdown Preview, see https://help.github.com/articles/creating-an-oauth-token-for-command-line-use.\n        Warn: this secret *must not be shared* with anyone and at least you should create it with minimal scopes for security reasons.\n    */\n    // \"github_oauth_token\": \"secret\",\n\n    /*\n        Sets the default css file to embed in the HTML\n\n        default - Use the builtin CSS or github CSS, depending on parser config (markdown.css or github.css)\n        other - Set an absolute path or url to any css file\n\n        Should be an array, but will take a single string to support legacy convention.\n    */\n    \"css\": [\"default\"],\n\n    /*\n        Allow CSS overrides\n\n        true - Any file with matching a .markdown_filetype extension with .css will be loaded as an override\n        false - Matching files ignored\n    */\n    \"allow_css_overrides\": true,\n\n    /*\n        Specify a HTML template file to render your markdown within.\n\n        Available place holders in HTML template:\n        {{ HEAD }} - would be replaced by generated stylesheets, javascripts enabled above\n        {{ BODY }} - would be replaced by HTML converted from markdown\n\n        By setting \"skip_default_stylesheet\" to true you can use the styles only in your HTML\n        template. In most cases you should turn this setting on to have a full-featured design.\n\n        Refer to 'customized-template-sample.html' as a show case.\n    */\n    // \"html_template\": \"/ABS_PATH_TO_A_HTML_FILE\",\n    // \"skip_default_stylesheet\": true,\n\n\n    /*\n        Sets the JavaScript files to embed in the HTML\n\n        Set an array of URLs or filepaths to JavaScript files. Absolute filepaths will be loaded\n        into the script tag; others will be set as the `src` attribute. The order of files in the\n        array is the order in which they are embedded.\n    */\n    // \"js\": [\"http://example.com/script.js\", \"/path/to/script.js\"],\n\n    /*\n        Enable or not whether parsed files will be auto-reloaded on save\n    */\n    \"enable_autoreload\": false,\n\n    /*\n        Sets the supported filetypes for auto-reload on save\n    */\n    \"markdown_filetypes\": [\".md\", \".markdown\", \".mdown\"],\n\n    /*\n        Sets a custom temporary folder for MarkdownPreview-generated HTML files. Useful if you're\n        using LiveReload and don't want to use the OS default. The directory will be created if it\n        doesn't exist. Relative paths are supported, and are checked against `os.path.isabs`, see\n        doc: http://docs.python.org/3/library/os.path.html#os.path.isabs\n\n        Examples: /tmp/custom_folder   (Linux/OSX - absolute path)\n                    C:/TEMP/MYNOTES\n                    C:\\\\TEMP\\\\MYNOTES    (Windows - absolute path, forward slash or escaped back slash)\n                    build                (All OS - relative path, current dir)\n                    ../build             (Linux/OSX - relative path, in parent dir)\n                    ..\\\\build            (Windows - relative path, in parent dir)\n    */\n    // \"path_tempfile\": \"/tmp/my_notes\",\n\n    /*\n        Sets HTML output to a simple form:\n            - No head\n            - No body tags\n            - ids, classes, and style are stripped out\n            - Just bare minimum HTML tags and attributes\n            - extension modifications included\n    */\n    \"html_simple\": false,\n\n    /*\n        Sets how image paths are handled.\n        Setting is a string value: (absolute | relative | base64 | none)\n            absolute: converts relative local paths to absolute\n            relative: converts relative local paths to a path relative to the\n                        HTML output\n            base64: coverts the local file to base64 and embeds it in the HTML\n            none: does nothing\n    */\n    \"image_path_conversion\": \"absolute\",\n\n    /*\n        Sets how file paths are handled.\n        Setting is a string value: (absolute | relative | none)\n            absolute: converts relative local paths to absolute\n            relative: converts relative local paths to a path relative to the\n                        HTML output\n            none: does nothing\n    */\n    \"file_path_conversions\": \"absolute\",\n\n    /*\n        Sets how multimarkdown critic marks are handled.\n        Setting is a string value: (accept | reject | none)\n            accept: Accepts the proposed inserts and deletions (comments etc. are discarded)\n            reject: Rejects the proposed inserts and deletions (comments etc. are discarded)\n            none: does nothing\n\n        Critic marks only affects \"github\" and \"markdown\" (Python Markdown).\n    */\n    \"strip_critic_marks\": \"none\",\n\n    /*\n        Strips the YAML front matter header and converts title to a heading\n    */\n    \"strip_yaml_front_matter\": false,\n\n    /* do we show the panel when build with CMD+B */\n    \"show_panel_on_build\": true,\n\n    /* do we include the CSS when outputting HTML into a new sublime view ? */\n    \"embed_css_for_sublime_output\": true\n}\n",
			"file": "/C/Users/uids6815/Crackcode/sublime/Data/Packages/Markdown Preview/MarkdownPreview.sublime-settings",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 10276,
				"line_ending": "Unix",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "/C/Users/uids6815/Crackcode/sublime/Data/Packages/User/MarkdownPreview.sublime-settings",
			"settings":
			{
				"buffer_size": 10276,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/uids6815/Crackcode/sublime/Data/Packages/OmniMarkupPreviewer/OmniMarkupPreviewer.sublime-settings",
			"settings":
			{
				"buffer_size": 4656,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/uids6815/Crackcode/sublime/Data/Packages/User/OmniMarkupPreviewer.sublime-settings",
			"settings":
			{
				"buffer_size": 4715,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "P4.sublime-project",
			"settings":
			{
				"buffer_size": 45,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/PID.h",
			"settings":
			{
				"buffer_size": 609,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 4 files for \"UpdateError\" (whole word)\n\nC:\\Users\\uids6815\\Linux\\Udacity\\P4-PID-Control\\src\\PID.cpp:\n   14  }\n   15  \n   16: void PID::UpdateError(double cte) {\n   17  }\n   18  \n\nC:\\Users\\uids6815\\Linux\\Udacity\\P4-PID-Control\\src\\PID.h:\n   36    * Update the PID error variables given cross track error.\n   37    */\n   38:   void UpdateError(double cte);\n   39  \n   40    /*\n\n2 matches across 2 files\n\n\nSearching 4 files for \"total_square_error\" (whole word)\n\n0 matches\n\n\nSearching 4 files for \"total_square_error\"\n\n0 matches",
			"settings":
			{
				"buffer_size": 534,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "lesson/16.04_implement_P_Controller/P_Controller.py",
			"settings":
			{
				"buffer_size": 3946,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lesson/16.07_PD_Controller/PD_controller.py",
			"settings":
			{
				"buffer_size": 4462,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lesson/16.11_PID_Controller/PID.py",
			"settings":
			{
				"buffer_size": 4250,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"git diff",
				"Git: Diff Current File"
			],
			[
				"line end",
				"Line Ending to all views: Unix"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git add ",
				"Git: Add Remote"
			],
			[
				"git add",
				"Git: Add Remote"
			],
			[
				"git pull",
				"Git: Pull"
			]
		],
		"width": 735.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/lesson",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/lesson/16.04_implement_P_Controller",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/lesson/16.07_PD_Controller",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/lesson/16.11_PID_Controller",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/lesson/16.14_twiddle",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/src"
	],
	"file_history":
	[
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/.gitignore",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/lesson/16.7_PD_Controller/PD_controller.py",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/lesson/16.11_PID_Controller/PID.py",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P4-PID-Control/lesson/16.14_twiddle/twiddle.py",
		"/C/Users/uids6815/Crackcode/Conti/Redvine/rv_start.sh",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Catch-Run-Away-Car-UKF/src/Eigen/src/SparseCore/SparseBlock.h",
		"/C/Users/uids6815/Crackcode/Sublime/sublime_text.exe",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/CarND-Catch-Run-Away-Car-UKF-master/src/ukf.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/CarND-Catch-Run-Away-Car-UKF-master/src/ukf.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/CarND-Catch-Run-Away-Car-UKF-master/src/measurement_package.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/CarND-Catch-Run-Away-Car-UKF-master/src/json.hpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/CarND-Catch-Run-Away-Car-UKF-master/src/main.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/CarND-Catch-Run-Away-Car-UKF-master/src/Open Notebook.onetoc2",
		"/C/Users/uids6815/Crackcode/Sublime/Data/Packages/User/SublimeAStyleFormatter.sublime-settings",
		"/C/Users/uids6815/Crackcode/Sublime/Data/Packages/User/LineEndings.sublime-settings",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/ukf.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/json.hpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.23mean-covariance-predict.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.23mean-covariance-predict.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.20sigmapointpredict.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.20sigmapointpredict.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/ukf.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/tools.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/tools.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/measurement_package.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/main.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/main-7.14sigmaGeneration.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/main-7.17augmentation.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/main-7.20sigmapointpredict.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/main-7.23mean-covariance-predict.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/main-7.26Update-predictRadarMeas.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/main-7.29Update-stateof-mean-covariance.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.14sigmaGeneration.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.14sigmaGeneration.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.17augmentation.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.17augmentation.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.26Update-predictRadarMeas.cpp",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.26Update-predictRadarMeas.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.29Update-stateof-mean-covariance.h",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/lesson/ukf-7.29Update-stateof-mean-covariance.cpp",
		"/C/Users/uids6815/Crackcode/Conti/Redvine/tools/proxyCntlm/GetCurrentPasswordHash.bat",
		"/C/Users/uids6815/Crackcode/Conti/Redvine/env/rv_windows_setup.py",
		"/C/Users/uids6815/Crackcode/Conti/Redvine/rv_start.bat",
		"/C/Users/uids6815/Crackcode/Conti/Redvine/rv_windows.ini",
		"/C/Users/uids6815/Crackcode/Conti/Redvine/rv_windows.ini.template",
		"/C/Users/uids6815/Crackcode/Conti/Redvine/tools/proxyCntlm/cntlm/cntlm.ini",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/UKF.docx",
		"/C/Users/uids6815/Crackcode/Sublime/Data/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/C/Users/uids6815/Crackcode/tensorflow/models/tutorials/image/mnist/data/t10k-images-idx3-ubyte.gz",
		"/C/Users/uids6815/Linux/Udacity/Udacity-SelfDrivingCar-Term2/P2-Unscented-KalmanFilter/src/Eigen/src/Cholesky/LLT.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/ukf-7.29.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/ukf-7.20sigmapointpredict.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/ukf-7.20sigmapointpredict.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/main-7.20sigmapointpredict.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/ukf-7.17augmentation.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/ukf-7.17augmentation.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/main-7.17augmentation.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/main-7.14.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/ukf-7.14.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P2-UKF/ukf-7.14.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/tracking5-12.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/KalmanFilter.py",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/measurement_package.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/tracking5-12.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/main5-12.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/kalman5-12.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/CalculateRMSE5-22.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/JacobianMatrix5-18.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/kalman5-12.cpp",
		"/C/Users/uids6815/Downloads/cntlm - Kopie/Cntlm/cntlm.ini",
		"/C/Users/uids6815/Downloads/cntlm - Kopie/cntlm.bat",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/EKF_DATA/obj_pose-laser-radar-synthetic-input.txt",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/measurement_package5-12.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/FusionEKF.cpp",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-Term2/P1-KalmanFilter/src/Eigen/src/Core/Matrix.h",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-ND-Term1-master/ComputerVision/P5-VehicleDetection/README.md",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-ND-Term1-master/ComputerVision/P5-VehicleDetection/logs/train_results/result.md",
		"/C/Users/uids6815/Crackcode/udacity/Udacity-SelfDrivingCar-ND-Term1-master/ComputerVision/P5-VehicleDetection/logs/hogviz_experiments/ppc_exp1.md",
		"/C/Users/uids6815/Crackcode/tensorflow/test1"
	],
	"find":
	{
		"height": 47.0
	},
	"find_in_files":
	{
		"height": 133.0,
		"where_history":
		[
			"C:\\Users\\uids6815\\Linux\\Udacity\\P4-PID-Control\\src",
			"C:\\Users\\uids6815\\Crackcode\\Conti\\Redvine",
			"C:\\Users\\uids6815\\Linux\\Udacity\\Udacity-SelfDrivingCar-Term2\\CarND-Catch-Run-Away-Car-UKF\\src\\",
			"C:\\Users\\uids6815\\Linux\\Udacity\\Udacity-SelfDrivingCar-Term2\\CarND-Catch-Run-Away-Car-UKF-master\\src\\",
			"C:\\Users\\uids6815\\Linux\\Udacity\\Udacity-SelfDrivingCar-Term2\\CarND-Catch-Run-Away-Car-UKF-master\\src\\Eigen",
			"C:\\Users\\uids6815\\Linux\\Udacity\\Udacity-SelfDrivingCar-Term2\\CarND-Catch-Run-Away-Car-UKF-master\\src",
			"C:\\Users\\uids6815\\Linux\\Udacity\\Udacity-SelfDrivingCar-Term2\\P2-Unscented-KalmanFilter\\src\\",
			"C:\\Users\\uids6815\\Linux\\Udacity\\Udacity-SelfDrivingCar-Term2\\P2-Unscented-KalmanFilter",
			"C:\\Users\\uids6815\\Crackcode\\Conti\\Redvine",
			"C:\\Users\\uids6815\\Crackcode\\tensorflow\\models\\tutorials\\",
			"C:\\Users\\uids6815\\Crackcode\\tensorflow\\models\\tutorials\\image\\mnist\\",
			"C:\\Users\\uids6815\\Crackcode\\tensorflow\\models\\tutorials\\image\\mnist",
			"C:\\Users\\uids6815\\Crackcode\\tensorflow\\models\\tutorials\\image\\cifar10",
			"C:\\Users\\uids6815\\Linux\\Udacity\\Udacity-SelfDrivingCar-Term2\\P2-Unscented-KalmanFilter\\src",
			"C:\\Users\\uids6815\\Linux\\Udacity\\Udacity-SelfDrivingCar-Term2\\P2-Unscented-KalmanFilter",
			"C:\\Users\\uids6815\\Crackcode\\udacity\\Udacity-SelfDrivingCar-Term2\\P1-KalmanFilter\\src\\",
			"C:\\Users\\uids6815\\Crackcode\\udacity\\Udacity-SelfDrivingCar-Term2\\P1-KalmanFilter\\src\\Eigen",
			"C:\\Users\\uids6815\\Crackcode\\udacity\\Udacity-SelfDrivingCar-Term2\\P1-KalmanFilter",
			"C:\\Users\\uids6815\\Crackcode\\udacity\\kalman-master",
			"C:\\Users\\uids6815\\Crackcode\\udacity\\Udacity-SelfDrivingCar-ND-Term1-master\\ComputerVision\\P5-VehicleDetection"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"theme",
			"enable_highlight",
			"enable_mathjax",
			"total_square_error",
			"UpdateError",
			";\n",
			"diff_CTE",
			"error",
			"cte",
			"speed",
			"twiddle",
			"pi",
			"steering_drift",
			"from pymongo import",
			"from protobuf import",
			"from protobuf",
			"pymongo",
			"tmp_path",
			"model_weights.hdf5",
			"ecal",
			"hunter_y",
			"turn",
			"Prediction_chase",
			"Normalize",
			"SNormalizeAngle2",
			"0.0001",
			"0.001",
			"z_predmean",
			"Xsig_aug_",
			"= MatrixXd",
			"= VectorXd",
			"z_predmean",
			"int n_z = ",
			"n_z",
			"0.001",
			"0.0001",
			"todo",
			"R_radar_",
			"VectorXd",
			"TODO",
			"Xsig_aug_",
			"P_",
			"X_aug_",
			"x_aug_",
			"Xsig_pred_",
			"Xsig_aug_",
			" L ",
			"L",
			"std_yawdd_",
			"std_a_",
			"L",
			"Xsig_",
			"object_detection",
			"object",
			"keras",
			"kefas",
			"train",
			"training_data_from",
			"training_from",
			"training_data_from_mongo",
			"flow_from_mongodb",
			"ACTIONS",
			"Xsig_pred_",
			"Xsig_pred",
			"Xsig_aug_",
			"Xsig_",
			"std_a_",
			"std_a",
			"n_x",
			"n_x_",
			"print",
			"WORK_DIRECTORY",
			"maybe_download",
			"store_true",
			"self_test",
			"mnist",
			"embedding_config",
			"tmp",
			"mnist_logs",
			"mnist_log",
			"num_epochs",
			"step",
			"i",
			"cpu:0",
			"gpu:0",
			"/gpu:0",
			"cpu",
			"/tmp/cifar10_train",
			"tmp/cifar10_train",
			"_variable_on_cpu",
			"cpu:0",
			"cpu",
			"train",
			"inference",
			"tf.nn.conv2d",
			"_variable_on_cpu",
			"DATA_URL",
			"preprocess",
			"preprocess_input_data",
			"eval_dir",
			"tf.Session",
			"cpu",
			"gpu",
			"FLAGS",
			"sess",
			"main",
			"tf.summary",
			"with tf.Session",
			"tf.summary",
			"tf.get_variable",
			"summary_dir",
			"summaries_dir",
			"SummaryWriter",
			"GraphDef",
			"logdir",
			"tf.summary.scalar",
			"NUM_EXAMPLES_PER_EPOCH_FOR_TRAIN",
			"FLAGS",
			"TODO",
			"z_pred",
			"dt",
			"TODO",
			"raw_measurements_",
			"VectorXd",
			"measurement_timestamp",
			"noise_ax_",
			"recording",
			"extract_features_plot"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Normalize",
			"x_aug_",
			"X_aug_"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/PID.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1075,
						"regions":
						{
						},
						"selection":
						[
							[
								512,
								525
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										772,
										773
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										452,
										453
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4540,
						"regions":
						{
						},
						"selection":
						[
							[
								2515,
								2515
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3420,
										3421
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1928,
										1929
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 480.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3933,
						"regions":
						{
						},
						"selection":
						[
							[
								979,
								979
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1027,
										1030
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										917,
										920
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/MarkdownEditing/Markdown.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2112.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/uids6815/Crackcode/sublime/Data/Packages/Markdown Preview/MarkdownPreview.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10276,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								10276
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										44,
										45
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/uids6815/Crackcode/sublime/Data/Packages/User/MarkdownPreview.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10276,
						"regions":
						{
						},
						"selection":
						[
							[
								10276,
								10276
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4527.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/uids6815/Crackcode/sublime/Data/Packages/OmniMarkupPreviewer/OmniMarkupPreviewer.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4656,
						"regions":
						{
						},
						"selection":
						[
							[
								539,
								539
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4654,
										4655
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										57,
										58
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Users/uids6815/Crackcode/sublime/Data/Packages/User/OmniMarkupPreviewer.sublime-settings",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4715,
						"regions":
						{
						},
						"selection":
						[
							[
								2494,
								2494
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2566,
										2567
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										1944,
										1945
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 840.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "P4.sublime-project",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 45,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										43,
										44
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										0,
										1
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/PID.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 609,
						"regions":
						{
						},
						"selection":
						[
							[
								255,
								255
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										586,
										587
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										39,
										40
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 534,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										144,
										155
									],
									[
										339,
										350
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								481,
								481
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "C:\\Users\\uids6815\\Linux\\Udacity\\Udacity-SelfDrivingCar-Term2\\P4-PID-Control",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 347.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lesson/16.04_implement_P_Controller/P_Controller.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3946,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1420.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lesson/16.07_PD_Controller/PD_controller.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4462,
						"regions":
						{
						},
						"selection":
						[
							[
								4028,
								4033
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2276.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "lesson/16.11_PID_Controller/PID.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4250,
						"regions":
						{
						},
						"selection":
						[
							[
								3586,
								3586
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2060.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-pull":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 248.0
	},
	"pinned_build_system": "",
	"project": "P4.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 235.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
